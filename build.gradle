import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation
import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "https://maven.daporkchop.net/" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "com.github.jengelman.gradle.plugins:shadow:4.0.0"
    }
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "com.github.johnrengelman.shadow"

version = file('version.txt').text.trim() + "." + ('git rev-list --count HEAD'.execute().text.trim()) + "-1.12.2"
group = project.mod_group
archivesBaseName = project.mod_id

sourceCompatibility = targetCompatibility = '1.8'
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

minecraft {
    version = project.forge_version
    mappings = project.mcp_mappings
    runDir = "run"
}

repositories {
    mavenCentral()
    jcenter()
    maven { // cubicchunks, cubicworldgen, terraplusplus
        name = "JitPack"
        url = "https://jitpack.io/"
    }
    maven { // leveldb
        name = "DaPorkchop_"
        url = "https://maven.daporkchop.net/"
    }
    maven { // leveldb
        name = "OpenCollab Snapshots"
        url = "https://repo.opencollab.dev/snapshot/"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

dependencies {
    deobfProvided ('com.github.OpenCubicChunks.CubicChunks:cubicchunks:f71aafb9854466ac5ffa0ccd2796921684f1d8b1') {
        transitive = false
    }
    deobfProvided ('com.github.OpenCubicChunks:CubicWorldGen:27de56d2f792513873584b2f8fd9f3082fb259ec') {
        transitive = false
    }
    deobfProvided ('com.github.BuildTheEarth:terraplusplus:8c9b9aaf40c8470af9d106944622ba2fc9f99ef8') {
        transitive = true
    }

    testCompile 'junit:junit:4.13.2'

    provided 'org.projectlombok:lombok:1.18.20'
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace ${version} to the project version
    with copySpec {
        from 'src/main/resources/mcmod.info'
        filter(ReplaceTokens, tokens: ['${version}': version])
    }

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    classifier = null
    configurations = [project.configurations.shade]

    exclude 'module-info.class'
}
build.dependsOn shadowJar

reobf {
    shadowJar {}
}

task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "${project.mod_group}.${project.mod_id}.dep"
}

shadowJar.dependsOn relocateShadowJar

test {
    useJUnitPlatform()
}